name: Deploy Authentication to AWS EC2

on:
  push:
    branches:
      - develop
    paths:
      - 'Backend/Domains/Authentication/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Authentication files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          source: |
            Backend/Domains/Authentication
          target: /home/ubuntu/GreenCommerce/Auth
          port: 22
          overwrite: true
          rm: true

      - name: Create application.properties in EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          script: |
            APP_PATH="/home/ubuntu/GreenCommerce/Auth/Backend/Domains/Authentication/Login/app/login-service/src/main/resources"
            mkdir -p $APP_PATH

            cat <<EOF > $APP_PATH/application.properties
            spring.application.name=LoginService

            # Configuración de la base de datos (MySQL)
            spring.datasource.url=${{ secrets.DB_URL }}
            spring.datasource.username=${{ secrets.DB_USER }}
            spring.datasource.password=${{ secrets.DB_PASS }}
            spring.datasource.initialization-mode=always
            spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
            spring.jpa.defer-datasource-initialization=true

            # Hibernate settings
            spring.jpa.hibernate.ddl-auto=update
            spring.jpa.show-sql=true
            spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

            # Puerto de la aplicación
            server.port=8082

            # Configuración de seguridad JWT
            jwt.secret=${{ secrets.JWT_SECRET }}
            EOF

            cd /home/ubuntu/GreenCommerce/Auth/Backend/Domains/Authentication
            sudo docker-compose down --rmi all --volumes --remove-orphans || true
            sudo docker system prune -af || true
            sudo docker-compose up --build -d