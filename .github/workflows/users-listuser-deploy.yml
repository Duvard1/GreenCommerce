name: Deploy ListUser to AWS EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy ListUser files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_USERS_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_USERS_KEY }}
          source: |
            Backend/Domains/Users/ListUser
          target: /home/ubuntu/GreenCommerce
          port: 22
          overwrite: true
          rm: true

      - name: Deploy ListUser with Docker
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_USERS_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_USERS_KEY }}
          script: |
            cd /home/ubuntu/GreenCommerce/Backend/Domains/Users/ListUser

            # Crear el archivo .env de forma explícita
            echo "DB_HOST=${{ secrets.LISTUSER_DB_HOST }}" > .env
            echo "DB_PORT=${{ secrets.LISTUSER_DB_PORT }}" >> .env
            echo "DB_NAME=${{ secrets.LISTUSER_DB_NAME }}" >> .env
            echo "DB_USER=${{ secrets.LISTUSER_DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.LISTUSER_DB_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.LISTUSER_JWT_SECRET }}" >> .env

            # Verificar que el .env se creó correctamente
            echo "--- CONTENIDO DEL .env ---"
            cat .env

            # Validar que .env no esté vacío
            if [ ! -s .env ]; then
              echo "ERROR: El archivo .env no fue creado correctamente o está vacío"
              exit 1
            fi

            sudo docker build -t list-user-service .
            sudo docker stop list-user-service || true
            sudo docker rm list-user-service || true
            sudo docker run -d -p 8081:8081 --env-file .env --name list-user-service list-user-service