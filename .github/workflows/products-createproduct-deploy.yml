name: Deploy CreateProduct Microservice to AWS EC2

on:
  push:
    branches:
      - develop
    paths:
      - 'Backend/Domains/Products/CreateProduct/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest ./Backend/Domains/Products/CreateProduct
          docker push ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest

      - name: SSH and Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PRODUCTS_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEYPAIR }}
          port: 22
          script: |

            sudo docker stop create-product-service || true
            sudo docker rm create-product-service || true

            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest || true

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest

            cd /home/ubuntu

            echo "DB_HOST=${{ secrets.DB_HOST_PRODUCTS }}" > .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME_PRODUCTS }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            if [ ! -s .env ]; then
              echo "ERROR: .env is empty or was not created correctly"
              exit 1
            fi

            sudo docker run -d --env-file .env -p 3000:3000 --name create-product-service ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest
