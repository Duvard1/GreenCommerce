name: Deploy Authentication to AWS EC2

on:
  push:
    branches:
      - develop
    paths:
      - 'Backend/Domains/Authentication/Register/**'

jobs:
  deploy-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: '17'

      - name: Build the JAR
        run: |
          cd Backend/Domains/Authentication/Register/app/register-service
          mvn clean package -DskipTests

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          port: 22
          source: Backend/Domains/Authentication/Register/app/register-service/target/register-service-0.0.1-SNAPSHOT.jar
          target: /home/ubuntu/GreenCommerce/Backend/Domains/Authentication/Register/app/register-service/target/

      - name: Restart register-service on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          port: 22
          script_stop: false
          command_timeout: 2m
          script: |
            cd /home/ubuntu/GreenCommerce/Backend/Domains/Authentication/Register/app/register-service/target
            
            # Ensure the JAR file exists and is executable
            if [ ! -f "register-service-0.0.1-SNAPSHOT.jar" ]; then
              echo "Error: JAR file not found!"
              exit 1
            fi
            
            # Kill any running instances (more robust approach)
            sudo pkill -f 'register-service-0.0.1-SNAPSHOT.jar' || true
            sleep 2
            
            # Verify no processes are still running
            if pgrep -f 'register-service-0.0.1-SNAPSHOT.jar' > /dev/null; then
              echo "Force killing remaining processes..."
              sudo pkill -9 -f 'register-service-0.0.1-SNAPSHOT.jar' || true
              sleep 2
            fi
            
            # Create logs directory if it doesn't exist
            mkdir -p logs
            
            # Start the service with better process isolation
            echo "Starting register-service..."
            nohup java -jar register-service-0.0.1-SNAPSHOT.jar > logs/app.log 2>&1 < /dev/null &
            
            # Get the PID and verify it's running
            SERVICE_PID=$!
            echo "Started with PID: $SERVICE_PID"
            
            # Wait a moment and check if the process is still running
            sleep 3
            if ps -p $SERVICE_PID > /dev/null; then
              echo "Service started successfully with PID: $SERVICE_PID"
            else
              echo "Error: Service failed to start"
              echo "Last few lines of log:"
              tail -n 10 logs/app.log || echo "No log file found"
              exit 1
            fi