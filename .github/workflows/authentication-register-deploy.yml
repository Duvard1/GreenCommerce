name: Deploy Authentication to AWS EC2

on:
  push:
    branches:
      - develop
    paths:
      - 'Backend/Domains/Authentication/Register/**'

jobs:
  deploy-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: '17'

      - name: Build the JAR
        run: |
          cd Backend/Domains/Authentication/Register/app/register-service
          mvn clean package -DskipTests

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          port: 22
          source: Backend/Domains/Authentication/Register/app/register-service/target/register-service-0.0.1-SNAPSHOT.jar
          target: /home/ubuntu/GreenCommerce/Backend/Domains/Authentication/Register/app/register-service/target/

      - name: Restart register-service on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_AUTH_USER }}
          key: ${{ secrets.EC2_AUTH_KEY }}
          port: 22
          script_stop: false
          command_timeout: 2m
          script: |
            #!/bin/bash
            set -e
            
            cd /home/ubuntu/GreenCommerce/Backend/Domains/Authentication/Register/app/register-service/target
            
            echo "Current directory: $(pwd)"
            echo "Listing files:"
            ls -la
            
            # Ensure the JAR file exists
            if [ ! -f "register-service-0.0.1-SNAPSHOT.jar" ]; then
              echo "Error: JAR file not found!"
              exit 1
            fi
            
            echo "JAR file found, proceeding with deployment..."
            
            # Kill any running instances
            echo "Stopping existing processes..."
            pkill -f 'register-service-0.0.1-SNAPSHOT.jar' || true
            sleep 3
            
            # Force kill if still running
            if pgrep -f 'register-service-0.0.1-SNAPSHOT.jar' > /dev/null; then
              echo "Force killing remaining processes..."
              pkill -9 -f 'register-service-0.0.1-SNAPSHOT.jar' || true
              sleep 2
            fi
            
            # Create logs directory
            mkdir -p logs
            
            # Start the service
            echo "Starting register-service..."
            nohup java -jar register-service-0.0.1-SNAPSHOT.jar > logs/app.log 2>&1 &
            SERVICE_PID=$!
            
            echo "Service started with PID: $SERVICE_PID"
            
            # Wait and verify the service is running
            sleep 5
            if kill -0 $SERVICE_PID 2>/dev/null; then
              echo "✅ Service is running successfully with PID: $SERVICE_PID"
              echo "Checking application logs:"
              sleep 2
              tail -n 5 logs/app.log || echo "No logs yet"
            else
              echo "❌ Service failed to start or crashed"
              echo "Application logs:"
              cat logs/app.log || echo "No log file found"
              exit 1
            fi